	----- Source: https://www.wired.com/story/xz-backdoor-everything-you-need-to-know/ -----


The XZ Backdoor: Everything You Need to Know | WIREDSkip to main
contentSecurityPoliticsGearThe Big
StoryBusinessScienceCultureIdeasMerchPodcastsVideoNewslettersMagazineTravelSteven
Levy's Plaintext ColumnWIRED Classics from the ArchiveEventsWIRED
InsiderWIRED ConsultingJobsCouponsDan Goodin, Ars TechnicaSecurityApr
2, 2024 4:00 AMThe XZ Backdoor: Everything You Need to KnowDetails are
starting to emerge about a stunning supply chain attack that sent the
open source software community reeling.Illustration: da-kuk/Getty
ImagesSave this storySaveSave this storySaveIf you buy something using
links in our stories, we may earn a commission. This helps support our
journalism. Learn more. Please also consider subscribing to WIREDOn
Friday, a lone Microsoft developer rocked the world when he revealed a
backdoor had been intentionally planted in XZ Utils, an open source
data compression utility available on almost all installations of
Linux and other Unix-like operating systems. The person or people
behind this project likely spent years on it. They were likely very
close to seeing the backdoor update merged into Debian and Red Hat,
the two biggest distributions of Linux, when an eagle-eyed software
developer spotted something fishy."This might be the best executed
supply chain attack we've seen described in the open, and it's a
nightmare scenario: malicious, competent, authorized upstream in a
widely used library," software and cryptography engineer Filippo
Valsorda said of the effort, which came frightfully close to
succeeding.Researchers have spent the weekend gathering clues. Here's
what we know so far.What Is XZ Utils?XZ Utils is nearly ubiquitous in
Linux. It provides lossless data compression on virtually all Unix-
like operating systems, including Linux. XZ Utils provides critical
functions for compressing and decompressing data during all kinds of
operations. XZ Utils also supports the legacy .lzma format, making
this component even more crucial.What Happened?Andres Freund, a
developer and engineer working on Microsoft’s PostgreSQL offerings,
was recently troubleshooting performance problems a Debian system was
experiencing with SSH, the most widely used protocol for remotely
logging in to devices over the Internet. Specifically, SSH logins were
consuming too many CPU cycles and were generating errors with
valgrind, a utility for monitoring computer memory.Through sheer luck
and Freund’s careful eye, he eventually discovered the problems were
the result of updates that had been made to XZ Utils. On Friday,
Freund took to the Open Source Security List to disclose the updates
were the result of someone intentionally planting a backdoor in the
compression software.It's hard to overstate the complexity of the
social engineering and the inner workings of the backdoor. Thomas
Roccia, a researcher at Microsoft, published a graphic on Mastodon
that helps visualize the sprawling extent of the nearly successful
endeavor to spread a backdoor with a reach that would have dwarfed the
SolarWinds event from 2020.What Does the Backdoor Do?Malicious code
added to xz Utils versions 5.6.0 and 5.6.1 modified the way the
software functions. The backdoor manipulated sshd, the executable file
used to make remote SSH connections. Anyone in possession of a
predetermined encryption key could stash any code of their choice in
an SSH login certificate, upload it, and execute it on the backdoored
device. No one has actually seen code uploaded, so it's not known what
code the attacker planned to run. In theory, the code could allow for
just about anything, including stealing encryption keys or installing
malware.Wait, How Can a Compression Utility Manipulate a Process as
Security-Sensitive as SSH?Any library can tamper with the inner
workings of any executable it is linked against. Often, the developer
of the executable will establish a link to a library that's needed for
it to work properly. OpenSSH, the most popular sshd implementation,
doesn’t link the liblzma library, but Debian and many other Linux
distributions add a patch to link sshd to systemd, a program that
loads a variety of services during the system bootup. Systemd, in
turn, links to liblzma, and this allows XZ Utils to exert control over
sshd.How Did This Backdoor Come to Be?It would appear that this
backdoor was years in the making. In 2021, someone with the username
JiaT75 made their first known commit to an open source project. In
retrospect, the change to the libarchive project is suspicious,
because it replaced the safe_fprint funcion with a variant that has
long been recognized as less secure. No one noticed at the time.Ars
TechnicaThis story originally appeared on Ars Technica, a trusted
source for technology news, tech policy analysis, reviews, and more.
Ars is owned by WIRED's parent company, Condé Nast.The following year,
JiaT75 submitted a patch over the XZ Utils mailing list, and, almost
immediately, a never-before-seen participant named Jigar Kumar joined
the discussion and argued that Lasse Collin, the longtime maintainer
of XZ Utils, hadn’t been updating the software often or fast enough.
Kumar, with the support of Dennis Ens and several other people who had
never had a presence on the list, pressured Collin to bring on an
additional developer to maintain the project.In January 2023, JiaT75
made their first commit to XZ Utils. In the months following, JiaT75,
who used the name Jia Tan, became increasingly involved in XZ Utils
affairs. For instance, Tan replaced Collins’ contact information with
their own on oss-fuzz, a project that scans open source software for
vulnerabilities that can be exploited. Tan also requested that oss-
fuzz disable the ifunc function during testing, a change that
prevented it from detecting the malicious changes Tan would soon make
to XZ Utils.In February of this year, Tan issued commits for versions
5.6.0 and 5.6.1 of XZ Utils. The updates implemented the backdoor. In
the following weeks, Tan or others appealed to developers of Ubuntu,
Red Hat, and Debian to merge the updates into their OSes. Eventually,
one of the two updates made its way into several releases, according
to security firm Tenable. There’s more about Tan and the timeline
here.Can You Say More About What This Backdoor Does?In a nutshell, it
allows someone with the right private key to hijack sshd, the
executable file responsible for making SSH connections, and from there
to execute malicious commands. The backdoor is implemented through a
five-stage loader that uses a series of simple but clever techniques
to hide itself. It also provides the means for new payloads to be
delivered without major changes being required.Multiple people who
have reverse-engineered the updates have much more to say about the
backdoor. Developer Sam James provided an overview here.Most
PopularGearThe Best Hearing Aids We’ve Personally Tested and Vetted
With an ExpertBy Christopher NullGearThe Best Wireless Earbuds for
EveryoneBy Parker HallGearHow Do You Solve a Problem Like Polestar?By
Carlton ReidCultureThe 21 Best Movies on Amazon Prime Right NowBy Matt
KamenIn an online interview, developer and reverse engineer HD Moore
confirmed the Sam James suspicion that the backdoor targeted either
Debian or Red Hat distributions.“The attack was sneaky in that it only
did the final steps of the backdoor if you were building the library
on amd64 (intel x86 64-bit) and were building a Debian or a RPM
package (instead of using it for a local installation),” he
wrote.Paraphrasing observations from researchers who collectively
spent the weekend analyzing the malicious updates, he continued:When
verifying an SSH public key, if the public key matches a certain
fingerprint function, the key contents are decrypted using a pre-
shared key before the public key is actually verified. The decrypted
contents are then passed directly to system.If the fingerprint doesn't
match or the decrypted contents don't match a certain format, it falls
back to regular key verification and no-one's the wiser.The backdoor
is super sneaky. It uses a little-known feature of the glibc to hook a
function. It only triggers when the backdoored xz library gets loaded
by a /usr/bin/sshd process on one of the affected distributions. There
may be many other backdoors, but the one everyone is talking about
uses the function indirection stuff to add the hook. The payload was
encoded into fake xz test files and runs as a shellcode effectively,
changing the SSH RSA key verification code so that a magic public key
(sent during normal authentication) let the attacker gain
access​​Their grand scheme was:sneakily backdoor the release tarballs,
but not the source codeuse sockpuppet accounts to convince the various
Linux distributions to pull the latest version and package itonce
those distributions shipped it, they could take over any downstream
user/company system/etcResearchers from networking firm Akamai also
explain well how the backdoor works here.What More Do We Know About
Jia Tan?At the moment, extremely little, especially for someone
entrusted to steward a piece of software as ubiquitous and as
sensitive as XZ Utils. This developer persona has touched dozens of
other pieces of open source software in the past few years. At the
moment, it’s unknown if there was ever a real-world person behind this
username or if Jia Tan is a completely fabricated
individual.Additional technical analysis is available from the above
Bluesky thread from Valsorda, researcher Kevin Beaumont, and Freund’s
Friday disclosure.Is There a CVE Tracking Designation?Yes, it's
CVE-2024-3094.How Do I Know If the Backdoor Is Present on My
Device?There are several ways. One is this page from security firm
Binarly. The tool detects implementation of IFUNC and is based on
behavioral analysis. It can automatically detect invariants in the
event a similar backdoor is implanted elsewhere.There's also a project
called xzbot. It provides the following:honeypot: fake vulnerable
server to detect exploit attemptsed448 patch: patch liblzma.so to use
our own ED448 public keybackdoor format: format of the backdoor
payloadbackdoor demo: cli to trigger the RCE assuming knowledge of the
ED448 private keyThis story originally appeared on Ars
Technica.Updated 4/2/2024, 1:23 pm ET to include additional
details.You Might Also Like …Politics Lab: Get the newsletter and
listen to the podcastWhat happens when you give people free moneyNot
everyone loses weight on OzempicThe Pentagon wants to spend $141
billion on a doomsday machineEvent: Join us for the Energy Tech Summit
on October 10 in BerlinDan Goodin is IT Security Editor at Ars
TechnicaXTopicsArs Technicasecurityopen sourcehackingmalwareLinuxRead
MoreTherapy Sessions Exposed by Mental Health Care Firm’s Unsecured
DatabaseVideo and audio of therapy sessions, transcripts, and other
patient records were accidentally exposed in a publicly accessible
database operated by the virtual medical company Confidant Health.Matt
BurgessHackers Threaten to Leak Planned Parenthood DataPlus:
Kaspersky’s US business sold, Nigerian sextortion scammers jailed, and
Europe’s controversial encryption plans return.Matt BurgessHarmful
'Nudify' Websites Used Google, Apple, and Discord Sign-On
SystemsSingle sign-on systems from several Big Tech companies are
being incorporated into deepfake generators, WIRED found. Discord and
Apple have started to terminate some developers’ accounts.Matt Burgess	----- Source: https://cybernews.com/editorial/xz-linux-backdoor-explained/ -----


        Attention Required! | Cloudflare               Please enable
cookies.   Sorry, you have been blocked You are unable to access
cybernews.com            Why have I been blocked? This website is
using a security service to protect itself from online attacks. The
action you just performed triggered the security solution. There are
several actions that could trigger this block including submitting a
certain word or phrase, a SQL command or malformed data.   What can I
do to resolve this? You can email the site owner to let them know you
were blocked. Please include what you were doing when this page came
up and the Cloudflare Ray ID found at the bottom of this page.
Cloudflare Ray ID: 8c20f39669eba7dd •        Your IP:       Click to
reveal 89.147.101.28 •  Performance & security by Cloudflare

	----- Source: https://www.theverge.com/2024/4/2/24119342/xz-utils-linux-backdoor-attempt -----


How one volunteer stopped a backdoor from exposing Linux systems
worldwide - The VergeSkip to main contentThe VergeThe Verge logo.The
Verge homepageThe Verge homepageThe VergeThe Verge
logo./Tech/Reviews/Science/Entertainment/AI/MoreMenuExpandThe VergeThe
Verge logo.MenuExpandTech/Security/LinuxHow one volunteer stopped a
backdoor from exposing Linux systems worldwideHow one volunteer
stopped a backdoor from exposing Linux systems worldwide / An off-the-
clock Microsoft worker prevented malicious code from spreading into
widely-used versions of Linux via a compression format called XZ
Utils. By  Amrita Khalid, one of the authors of audio industry
newsletter Hot Pod. Khalid has covered tech, surveillance policy,
consumer gadgets, and online communities for more than a decade.  Apr
2, 2024, 11:38 PM UTCShare this story Photo by Amelia Holowaty Krales
/ The VergeLinux, the most widely used open source operating system in
the world, narrowly escaped a massive cyber attack over Easter
weekend, all thanks to one volunteer.The backdoor had been inserted
into a recent release of a Linux compression format called XZ Utils, a
tool that is little-known outside the Linux world but is used in
nearly every Linux distribution to compresses large files, making them
easier to transfer. If it had spread more widely, an untold number of
systems could have been left compromised for years.And as Ars Technica
noted in its exhaustive recap, the culprit had been working on the
project out in the open.The vulnerability, inserted into Linux’s
remote log-in, only exposed itself to a single key, so that it could
hide from scans of public computers. As Ben Thompson writes in
Stratechery.  “the majority of the world’s computers would be
vulnerable and no one would know.”The story of the XZ backdoor’s
discovery starts in the early morning of March 29th, as San Francisco-
based Microsoft developer Andres Freund posted on Mastodon and sent an
email to OpenWall’s security mailing list with the heading: “backdoor
in upstream xz/liblzma leading to ssh server compromise.” Freund, who
volunteers as a “maintainer” for PostgreSQL, a Linux-based database,
noticed a few strange things over the past few weeks while running
tests. Encrypted log-ins to liblzma, part of the XZ compression
library, were using up a ton of CPU. None of the performance tools he
used revealed anything, Freund wrote on Mastodon. This immediately
made him suspicious, and he remembered an “odd complaint” from a
Postgres user a couple of weeks earlier about Valgrind, Linux’s
program that checks for memory errors. After some sleuthing, Freund
eventually discovered what was wrong. “The upstream xz repository and
the xz tarballs have been backdoored,” noted Freund in his email. The
malicious code was in versions ​​5.6.0 and 5.6.1 of the xz tools and
libraries. Shortly after, enterprise opensource software company Red
Hat sent out an emergency security alert for users of Fedora Rawhide
and Fedora Linux 40. Ultimately, the company concluded that the beta
version of Fedora Linux 40 contained two affected versions of the xz
libraries. Fedora Rawhide versions likely received versions 5.6.0 or
5.6.1 as well. PLEASE IMMEDIATELY STOP USAGE OF ANY FEDORA RAWHIDE
INSTANCES for work or personal activity. Fedora Rawhide will be
reverted to xz-5.4.x shortly, and once that is done, Fedora Rawhide
instances can safely be redeployed.Although a beta version of Debian,
the free Linux distribution, contained compromised packages, its
security team acted swiftly to revert them. “Right now no Debian
stable versions are known to be affected,” wrote Debian’s Salvatore
Bonaccorso in a security alert to users on Friday evening. Freund
later identified the person who submitted the malicious code as one of
two main xz Utils developers, known as JiaT75, or Jia Tan. “Given the
activity over several weeks, the committer is either directly involved
or there was some quite severe compromise of their system.
Unfortunately the latter looks like the less likely explanation, given
they communicated on various lists about the “fixes” mentioned above,”
wrote Freund in his analysis, after linking several workarounds that
were made by JiaT75. JiaT75 was a familiar name: they’d worked side-
by-side with the original developer of .xz file format, Lasse Collin,
for a while. As programmer Russ Cox noted in his timeline, JiaT75
started by sending apparently legitimate patches to the XZ mailing
list in October of 2021. Other arms of the scheme unfolded a few
months later, as two other identities, Jigar Kumar and Dennis Ens,
began emailing complaints to Collin about bugs and the project’s slow
development. However, as noted in reports by Evan Boehs and others,
“Kumar” and “Ens” were never seen outside the XZ community, leading
investigators to believe both are fakes that existed only to help Jia
Tan get into position to deliver the backdoored code.An email from
“Jigar Kumar” pressuring the developer of XZ Utils to relinquish
control of the project. Image: Screenshot from The Mail Archive“I am
sorry about your mental health issues, but its important to be aware
of your own limits. I get that this is a hobby project for all
contributors, but the community desires more,” wrote Ens in one
message, while Kumar said in another that “Progress will not happen
until there is new maintainer.”In the midst of this back and forth,
Collins wrote that “I haven’t lost interest but my ability to care has
been fairly limited mostly due to longterm mental health issues but
also due to some other things,” and suggested Jia Tan would take on a
bigger role. “It’s also good to keep in mind that this is an unpaid
hobby project,” he concluded. The emails from “Kumar” and “Ens”
continued until Tan was added as a maintainer later that year, able to
make alterations, and attempt to get the backdoored package into Linux
distributions with more authority.The xz backdoor incident and its
aftermath are an example of both the beauty of open source and a
striking vulnerability in the internet’s infrastructure.A developer
behind FFmpeg, a popular open-source media package, highlighted the
problem in a tweet, saying “The xz fiasco has shown how a dependence
on unpaid volunteers can cause major problems. Trillion dollar
corporations expect free and urgent support from volunteers.” And they
brought receipts, pointing out how they dealt with a “high priority”
bug affecting Microsoft Teams.Despite Microsoft’s dependence on its
software, the developer writes, “After politely requesting a support
contract from Microsoft for long term maintenance, they offered a one-
time payment of a few thousand dollars instead...investments in
maintenance and sustainability are unsexy and probably won’t get a
middle manager their promotion but pay off a thousandfold over many
years.”  Details of who is behind “JiaT75,” how they executed their
plan, and the extent of the damage are being unearthed by an army of
developers and cybersecurity professionals, both on social media and
online forums. But that happens without direct financial support from
many of the companies and organizations who benefit from being able to
use secure software.CommentsMost PopularMost PopularThe US finally
takes aim at truck bloatNo, Kamala Harris wasn’t wearing these audio
earringsSony’s PS5 Pro is a pricey test of next-gen consolesSteam’s
improved family sharing is out now for everyoneThese are real earrings
— and also real earbudsVerge Deals / Sign up for Verge Deals to get
deals on products we've tested sent to your inbox weekly.Email
(required)Sign upBy submitting your email, you agree to our Terms and
Privacy Notice. This site is protected by reCAPTCHA and the Google
Privacy Policy and Terms of Service apply.From our sponsorAdvertiser
Content FromMore from TechNow there’s an AI gas station with robot fry
cooksHere are the best Apple Watch deals right nowPresident Biden is
now posting into the fediverseApple quietly added Qi2 charging to the
iPhone 12Advertiser Content From

